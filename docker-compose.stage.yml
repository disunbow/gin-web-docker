version: '3'
services:
  # 数据库
  gin-web-mysql-stage:
    # 容器名称
    container_name: gin-web-mysql-stage
    # 重启策略: 容器退出时总是重启容器
    restart: always
    # 指定镜像, mysql 8.0
    image: mysql:8.0.19
    ports:
      # 避免端口冲突, 宿主机不用3306
      - 4306:3306
    # 设置环境变量
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: gin_web_stage
      MYSQL_USER: root
      MYSQL_PASSWORD: root
    # 自定义命令
    command:
      # utf8
      # 不区分大小写
      # mysql8.0需要设置原生密码, 否则可能无法登录
      # 增大数据包, 默认值1M
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --lower_case_table_names=1
      --default-authentication-plugin=mysql_native_password
      --max_allowed_packet=128M
    # 挂载文件
    volumes:
      # - ./docker-stage-data/mysql:/var/lib/mysql
      - mysql-stage-data:/var/lib/mysql
    # 设置网络
    networks:
      - stage-net

  # 缓存
  gin-web-redis-stage:
    # 容器名称
    container_name: gin-web-redis-stage
    # 重启策略: 容器退出时总是重启容器
    restart: always
    # 指定镜像
    image: redis:6.0.3
    ports:
      - 7379:6379
    environment:
      TZ: Asia/Shanghai
    # 挂载文件
    volumes:
      # - ./docker-stage-data/redis:/data
      - redis-stage-data:/data
    # 设置网络
    networks:
      - stage-net

  # 后端容器
  gin-web-stage:
    container_name: gin-web-stage
    restart: always
    # 本地构建使用build, 这里我在持续构建平台以及传到了阿里云镜像仓库, 因此直接使用镜像地址
    image: registry.cn-shenzhen.aliyuncs.com/piupuer/gin-web-stage:latest
    # build:
    #   # 指定设定上下文根目录，然后以该目录为准指定Dockerfile
    #   context: ./gin-web
    #   dockerfile: Dockerfile.stage
    # 设置工作目录为容器内的app文件夹(容器运行时会用到)
    working_dir: /app/gin-web-stage
    environment:
      TZ: Asia/Shanghai
    volumes:
      # 映射容器产生的日志到主机的logs文件夹
      # - ./docker-stage-data/web/logs:/app/gin-web-stage/logs
      - app-logs-stage-data:/app/gin-web-stage/logs
      - app-conf-stage-data:/app/gin-web-stage/conf
    # 映射端口
    ports:
      - 9090:9090
    depends_on:
      - gin-web-mysql-stage
      - gin-web-redis-stage
    links:
      # 为数据库设置别名, docker网桥名:应用内部访问名
      - gin-web-mysql-stage:docker-mysql
      - gin-web-redis-stage:docker-redis
    networks:
      - stage-net

  # 前端容器
  gin-web-vue-stage:
    container_name: gin-web-vue-stage
    restart: always
    image: registry.cn-shenzhen.aliyuncs.com/piupuer/gin-web-vue-stage:latest
    # build:
    #   context: ./gin-web-vue
    #   dockerfile: Dockerfile.stage
    environment:
      TZ: Asia/Shanghai
    ports:
      - 9091:9091
    depends_on:
      - gin-web-stage
    links:
      # 为nginx配置后端访问别名, docker网桥名:应用内部访问名
      - gin-web-stage:docker-web
    # 挂载文件
    volumes:
      # 映射容器产生的日志到主机的logs文件夹
      # - ./docker-stage-data/nginx/logs:/var/log/nginx
      - vue-logs-stage-data:/var/log/nginx
    # 设置网络
    networks:
      - stage-net

networks:
  # 定义网络gin-web, 供前后端/mysql使用
  stage-net:


# 全局数据卷, 可容器间共享
volumes:
  mysql-stage-data:
  redis-stage-data:
  app-logs-stage-data:
  app-conf-stage-data:
  vue-logs-stage-data:
